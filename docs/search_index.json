[["index.html", "Collected R Code Introduction", " Collected R Code Phil Swatton Introduction This is a collection of R code written for the purposes of practice and demonstration. At the moment this is all in a work in progress stage, with a rough sketch set out for what the eventual contents will vaguely look like. "],["ordinary-least-squares.html", "Ordinary Least Squares", " Ordinary Least Squares Some example R code we want to solve something of the form \\[ \\boldsymbol{Y} = \\boldsymbol{X}\\boldsymbol{\\beta} + \\boldsymbol{\\epsilon} \\] OLS is typically learned as \\[ (\\boldsymbol{X}&#39;\\boldsymbol{X})^{-1}\\boldsymbol{X}&#39;\\boldsymbol{Y} \\] - but in practice, this is computationally inefficient - floating point algebra, matrix inversion, etc etc - instead, we use QR decomposition \\[ \\boldsymbol{X} = \\boldsymbol{QR} \\] - since R is an upper triangular matrix, we can set \\[ \\boldsymbol{Y} = \\boldsymbol{QR}\\boldsymbol{\\beta} \\] - meaning that: \\[ \\boldsymbol{Q}^{-1}\\boldsymbol{Y} = \\boldsymbol{R}\\boldsymbol{\\beta} \\] - by definition of the QR decomposition: \\[ \\boldsymbol{Q}^{-1}\\boldsymbol{Y} = \\boldsymbol{Q}&#39;\\boldsymbol{Y}\\] - we can therefore exploit the triangular structur of \\(\\boldsymbol{R}\\) to backsolve the equation: \\[ \\boldsymbol{Q}&#39;\\boldsymbol{Y} = \\boldsymbol{R}\\boldsymbol{\\beta} \\] ols &lt;- function(data, formula, method=&quot;QR&quot;, na.action=na.exclude) { mf &lt;- model.frame(formula, data, na.action=na.action) Y &lt;- model.response(mf, type=&quot;double&quot;) X &lt;- model.matrix(mf) if (method == &quot;matrix&quot;) B &lt;- solve(t(X) %*% X) %*% t(X) %*% Y if (method == &quot;QR&quot;) { QR &lt;- qr(X) Q &lt;- qr.Q(QR) R &lt;- qr.R(QR) B &lt;- backsolve(R, t(Q)%*%Y) } return(B) } Putting the function in action: set.seed(42) N &lt;- 1000 X1 &lt;- rnorm(N) X2 &lt;- rnorm(N) y = 1.5 + 2*X1 + 3*X2 + rnorm(N) df &lt;- data.frame( y, X1, X2 ) f &lt;- y ~ X1 + X2 ols(df, f) ## [,1] ## [1,] 1.496133 ## [2,] 1.978201 ## [3,] 2.981712 ols(df, f, &quot;matrix&quot;) ## [,1] ## (Intercept) 1.496133 ## X1 1.978201 ## X2 2.981712 summary(lm(f, df)) ## ## Call: ## lm(formula = f, data = df) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.1968 -0.6336 0.0163 0.6654 3.4847 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.49613 0.03259 45.91 &lt;2e-16 *** ## X1 1.97820 0.03251 60.84 &lt;2e-16 *** ## X2 2.98171 0.03306 90.20 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.03 on 997 degrees of freedom ## Multiple R-squared: 0.923, Adjusted R-squared: 0.9228 ## F-statistic: 5974 on 2 and 997 DF, p-value: &lt; 2.2e-16 "],["logit.html", "Logit", " Logit Discussion of the model goes here Follow up with R implementation inv_logit &lt;- function(x) { p &lt;- 1 / (1 + exp(-x)) return(p) } logit &lt;- function(data, formula, na.action=na.exclude) { mf &lt;- model.frame(formula, data, na.action=na.action) Y &lt;- model.response(mf, type=&quot;double&quot;) X &lt;- model.matrix(mf) B &lt;- numeric(ncol(X)) logitll &lt;- function(B) { p &lt;- inv_logit((X %*% B)) lli &lt;- Y*log(p) + (1-Y)*log(1-p) return(-sum(lli)) } est &lt;- optim(B, logitll, method=&quot;BFGS&quot;) return(est$par) } Follow up with demonstration of the function in action set.seed(42) N &lt;- 1000 X1 &lt;- rnorm(N) X2 &lt;- rnorm(N) ystar &lt;- 1.5 + 2*X1 + 3*X2 + rnorm(N) y &lt;- rbinom(N, 1, inv_logit(ystar)) df &lt;- data.frame( y, X1, X2 ) f &lt;- y ~ X1 + X2 summary(glm(f,binomial,df))$coef ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.413335 0.1203875 11.73988 7.960399e-32 ## X1 1.839204 0.1439189 12.77945 2.135770e-37 ## X2 2.472301 0.1728920 14.29968 2.198073e-46 logit(data, f) ## [1] 1.413368 1.839245 2.472373 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
